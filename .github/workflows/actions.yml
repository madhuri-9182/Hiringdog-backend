name: Auto Deploy to MIG (Image-test-based)

on:
  push:
    branches: ['feature-1']

jobs:
  gce-image-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    # 1. Checkout repo
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Auth to GCP with WIF
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/568722140219/locations/global/workloadIdentityPools/github-pool/providers/github'
        service_account: 'github-actions@dynamic-now-438707-c1.iam.gserviceaccount.com'

    # 3. Set up gcloud CLI
    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: dynamic-now-438707-c1

    # 4. (Optional) Build & Push Docker Image
    #    Only needed if you still want Docker artifacts (not for VM baked image).
    - name: Build & Push Docker image
      if: env.BUILD_DOCKER == 'true'
      env:
        BUILD_DOCKER: ${{ secrets.BUILD_DOCKER }}
      run: |
        docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/node-app:latest .
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/node-app:latest

    # 5. Build a new GCE image (using packer or disk snapshot)
    - name: Create new GCE Image
      run: |
        IMAGE_NAME=hiringdog-image-$(date +%Y%m%d%H%M%S)
        gcloud compute images create $IMAGE_NAME \
          --source-disk=vm1 \
          --source-disk-zone=${{ secrets.ZONE }} \
          --project=dynamic-now-438707-c1
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

    # 6. Create new instance template
    - name: Create new Instance Template
      run: |
        TEMPLATE_NAME=hiringdog-template-$(date +%Y%m%d%H%M%S)
        gcloud compute instance-templates create $TEMPLATE_NAME \
          --machine-type=e2-medium \
          --image=$IMAGE_NAME \
          --tags=http-server,https-server
        echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV

    # 7. Update MIG with new template
    - name: Update MIG with new template
      run: |
        gcloud compute instance-groups managed set-instance-template ${{ secrets.MIG_NAME }} \
          --template=$TEMPLATE_NAME \
          --zone=${{ secrets.ZONE }}

    # 8. Start Rolling Update
    - name: Rolling Update MIG
      run: |
        gcloud compute instance-groups managed rolling-action start-update ${{ secrets.MIG_NAME }} \
          --version=template=$TEMPLATE_NAME \
          --zone=${{ secrets.ZONE }} \
          --max-surge=1 \
          --max-unavailable=0
