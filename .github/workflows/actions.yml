name: Build and Push Docker Image

on:
  push:
    branches: [main]
  

jobs:
  node-server-deploy-build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # REQUIRED for Workload Identity Federation
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authentication to google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/568722140219/locations/global/workloadIdentityPools/github-pool/providers/github'
        service_account: '568722140219-compute@developer.gserviceaccount.com'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        #install_components: 'beta'

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev
     
    - name: Build & Push Docker image
      run: |
        docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/node-app:latest .
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/node-app:latest


    - name: Create new Instance Template
      run: |
        IMAGE=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/node-app:latest
        TEMPLATE_NAME=node-app-template-$(date +%Y%m%d%H%M%S)

        gcloud compute instance-templates create-with-container $TEMPLATE_NAME \
          --project=${{ secrets.PROJECT_ID }} \
          --container-image=$IMAGE \
          --machine-type=e2-medium \
          --tags=http-server,https-server
         
        echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV

    - name: Update MIG with new template
      run: |
        gcloud compute instance-groups managed set-instance-template ${{ secrets.MIG_NAME }} \
          --project=${{ secrets.PROJECT_ID }} \
          --zone=${{ secrets.ZONE }} \
          --template=$TEMPLATE_NAME

        gcloud compute instance-groups managed rolling-action start-update ${{ secrets.MIG_NAME }} \
          --project=${{ secrets.PROJECT_ID }} \
          --zone=${{ secrets.ZONE }} \
          --version=template=$TEMPLATE_NAME \
          --max-surge=1 \
          --max-unavailable=0
    
